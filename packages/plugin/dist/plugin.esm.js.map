{"version":3,"file":"plugin.esm.js","sources":["../src/service-invoke/master.ts","../src/utils/index.ts","../src/shell/app.ts","../src/shell/app-shell.ts","../src/test/child.ts","../src/test/parent.ts","../src/test/shell/parent.ts","../src/test/shell/child1.ts"],"sourcesContent":["/**\r\n * hello 函数\r\n */\r\nexport function hello() {\r\n\r\n}\r\n/**\r\n * 主服务\r\n */\r\nexport let master = {\r\n    hello\r\n}\r\n\r\n","export interface Task {\r\n\r\n}\r\n\r\nexport enum SubAppLayout {\r\n    fullscreen = 'fullscreen',\r\n    embed = 'embed'\r\n}\r\n\r\nexport interface CommandData {\r\n    taskId?: string;\r\n    type: 'task' | 'message';\r\n    command: 'calender' | 'change-layout' | 'test' | 'send-setting';\r\n    data?: { layout: SubAppLayout }\r\n    /**是否广播 */\r\n    broadcast?: boolean;\r\n\r\n\r\n\r\n}\r\n\r\nexport abstract class EventListener {\r\n    listenerId!: string;\r\n    data: any;\r\n    abstract emit(data: any): void\r\n    abstract handle: Function;\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**消息中心状态 */\r\nexport enum EventBusStatus {\r\n    /**空闲 */\r\n    free = \"free\",\r\n    /** 处理中 */\r\n    process = \"process\"\r\n}\r\nexport let eventBus = new class EventBus {\r\n    status: EventBusStatus = EventBusStatus.free;\r\n    onStarTask?: (data: CommandData) => void\r\n    onFinishTask?: (data: CommandData) => void\r\n\r\n    processTasks: CommandData[] = [];\r\n    started!: boolean;\r\n    listeners: Map<string, EventListener[]> = new Map<string, EventListener[]>();\r\n    callbacks: Map<string, Function[]> = new Map<string, Function[]>();\r\n    constructor() {\r\n\r\n    }\r\n\r\n    callTask(event: CommandData, callback: Function) {\r\n        this.startTask(event);\r\n        event.taskId = event.type + Date.now();\r\n\r\n        let callbacks = this.callbacks.get(event.taskId);\r\n        if (callbacks) {\r\n            callbacks.push(callback);\r\n        } else {\r\n            this.callbacks.set(event.taskId, [callback]);\r\n        }\r\n        debugger;\r\n        window.parent.postMessage(event, '*');\r\n    }\r\n    callMessage(event: CommandData) {\r\n        window.parent.postMessage(event, '*');\r\n    }\r\n    startTask(command: CommandData) {\r\n        this.status = EventBusStatus.process;\r\n\r\n        this.processTasks.push(command);\r\n        if (this.onStarTask) {\r\n            this.onStarTask(command)\r\n        }\r\n\r\n    }\r\n\r\n    finishTask(taskId: string) {\r\n        let task = this.processTasks.find(t => t.taskId == taskId);\r\n\r\n        let taskIndex = this.processTasks.findIndex(t => t.taskId == taskId);\r\n        if (taskIndex > -1) this.processTasks.splice(taskIndex, 1);\r\n        if (this.onFinishTask) {\r\n            this.onFinishTask(task)\r\n        }\r\n        debugger;\r\n        if (this.processTasks.length == 0) {\r\n            this.status = EventBusStatus.free;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    startEventListener() {\r\n        if (this.started) return;\r\n        this.started = true;\r\n\r\n        window.addEventListener('message', (msg) => {\r\n            let taskId = msg.data.taskId;\r\n            let listenerId = msg.data.listenerId;\r\n            debugger;\r\n\r\n            /**处理任务 */\r\n            if (msg.data.command) {\r\n                let callbacks = this.listeners.get(msg.data.command);\r\n                if (callbacks) {\r\n                    debugger;\r\n                    callbacks.forEach(c => c.handle(msg.data));\r\n                    this.finishTask(taskId);\r\n                }\r\n                return\r\n\r\n            } else {\r\n                let callbacks = this.callbacks.get(taskId);\r\n                if (callbacks) {\r\n                    callbacks.forEach(c => c(msg.data));\r\n                }\r\n                this.finishTask(taskId)\r\n\r\n            }\r\n\r\n\r\n            if (listenerId) {\r\n                alert(listenerId)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    // startCallback() {\r\n    //     window.addEventListener('message', (msg) => {\r\n    //         debugger;\r\n    //         let type = msg.data.command\r\n    //         let callbacks = this.callbacks.get(type);\r\n    //         if (callbacks) {\r\n    //             callbacks.forEach(c => c(msg.data))\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n\r\n    registerListener(eventType: string, listener: EventListener) {\r\n        let listeners = this.listeners.get(eventType);\r\n        if (listeners) {\r\n            listeners.push(listener);\r\n        } else {\r\n            this.listeners.set(eventType, [listener])\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class CalendarEvent extends EventListener {\r\n    listenerId: string = 'calendar' + Date.now();\r\n    data: any;\r\n    /**事件堆栈 */\r\n    eventStack: any[] = [];\r\n    emit(date: Date) {\r\n        // alert(JSON.stringify(this.data));\r\n        debugger;\r\n\r\n        window.frames[0].postMessage({ date, taskId: this.data.taskId }, '*');\r\n    }\r\n    handle: Function;\r\n    constructor(handle: Function) {\r\n        super();\r\n        this.handle = (data: CommandData) => { this.data = data; handle(data) };\r\n        if (!eventBus.started) {\r\n            eventBus.startEventListener();\r\n        }\r\n        debugger;\r\n        eventBus.registerListener('test', this);\r\n\r\n    }\r\n\r\n    startListen() {\r\n\r\n    }\r\n    // removeListener() {\r\n    //     let values = eventBus.callbacks\r\n    //     for (let key in values) {\r\n    //         let callbacks = eventBus.callbacks.get(key);\r\n    //         if (callbacks) {\r\n    //             let exsitListener = callbacks.find(c => c.listenerId == this.listenerId);\r\n    //             if (exsitListener) {\r\n    //                 let indexOf = callbacks.indexOf(exsitListener);\r\n    //                 if (indexOf > -1) { callbacks.splice(indexOf, 1) };\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n\r\n    // }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport class SettingEvent extends EventListener {\r\n    listenerId: string = 'calendar' + Date.now();\r\n    data: any;\r\n    /**事件堆栈 */\r\n    eventStack: any[] = [];\r\n    emit(date: Date) {\r\n        // alert(JSON.stringify(this.data));\r\n        debugger;\r\n\r\n        window.frames[0].postMessage({ date, taskId: this.data.taskId }, '*');\r\n    }\r\n    handle: Function;\r\n    constructor(handle: Function) {\r\n        super();\r\n        this.handle = (data: CommandData) => { this.data = data; handle(data) };\r\n        if (!eventBus.started) {\r\n            eventBus.startEventListener();\r\n        }\r\n        debugger;\r\n        eventBus.registerListener('send-setting', this);\r\n\r\n    }\r\n\r\n    startListen() {\r\n\r\n    }\r\n    // removeListener() {\r\n    //     let values = eventBus.callbacks\r\n    //     for (let key in values) {\r\n    //         let callbacks = eventBus.callbacks.get(key);\r\n    //         if (callbacks) {\r\n    //             let exsitListener = callbacks.find(c => c.listenerId == this.listenerId);\r\n    //             if (exsitListener) {\r\n    //                 let indexOf = callbacks.indexOf(exsitListener);\r\n    //                 if (indexOf > -1) { callbacks.splice(indexOf, 1) };\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n\r\n    // }\r\n\r\n\r\n\r\n}\r\n\r\n","export enum AppLoadStatus {\r\n    Loading = 'Loading',\r\n    Finished = 'Finished',\r\n    Waiting = 'Waiting'\r\n}\r\nexport interface App {\r\n    /**应用的唯一id */\r\n    id: string;\r\n    title?: string;\r\n    /** 地址 */\r\n\r\n    url: string;\r\n    icon?: string;\r\n    description?: string;\r\n    /**应用的加载方式*/\r\n    loadMethod: LoadMethod;\r\n    isMaster?: boolean;\r\n    loadStatus?: AppLoadStatus\r\n\r\n\r\n}\r\nexport enum LoadMethod {\r\n    /**并行加载,加载优先级最高,使用预渲染与主应用同时加载,不易同时过多应用采用进行并行加载,虽然没有网络并发数量限制,但是流量压力过大 */\r\n    Parallel = 'Parallel',\r\n    /** 预加载  采用预加载  在主应用加载完成后，才会进行加载内容 */\r\n    Preload = 'Preload',\r\n    /** 懒加载  除非主动激活,或是调用其服务/命令  才会进行加载 */\r\n    LazyLoad = 'LazyLoad',\r\n    /** 惰性加载 当应用加载的方式为惰性加载时,通常处于禁用状态 */\r\n    InertLoad = 'InertLoad'\r\n}","import { App, AppLoadStatus, LoadMethod } from \"./app\";\r\n\r\nexport enum ShellStatus {\r\n    LoadingApp = 'LoadingApp',\r\n    FinishLoading = 'FinishLoading'\r\n}\r\n\r\n/**\r\n *  应用管理 ,请在主应用中使用\r\n * \r\n * let appShell= new AppSchell();\r\n * 在ssr 中可以使用\r\n * appShell.addApps();\r\n * \r\n * \r\n*/\r\nexport class AppSchell {\r\n    status!: ShellStatus;\r\n    loading: boolean;\r\n    loadingApp: App\r\n    apps: App[] = [];\r\n    masterApp!: App;\r\n    onAppChange?: (apps: App[]) => void;\r\n\r\n    addApps(app_list: App[]) {\r\n        this.apps.push(...app_list);\r\n    }\r\n    /** 获取并行加载app */\r\n    loadParallel() {\r\n        let parallelApps = this.apps.filter(app => app.loadMethod == LoadMethod.Parallel);\r\n        return parallelApps;\r\n    }\r\n    /**\r\n     * 获取预加载app\r\n     */\r\n    getPreloadApps() {\r\n        let parallelApps = this.apps.filter(app => app.loadMethod == LoadMethod.Preload);\r\n        return parallelApps;\r\n    }\r\n\r\n    /**\r\n     * 获取惰性加载app\r\n     * @returns \r\n     */\r\n    getInertLoadApps() {\r\n        let parallelApps = this.apps.filter(app => app.loadMethod == LoadMethod.InertLoad);\r\n        return parallelApps;\r\n    }\r\n    /**获取懒加载apps */\r\n    getLazyLoadApps() {\r\n        let parallelApps = this.apps.filter(app => app.loadMethod == LoadMethod.LazyLoad);\r\n        return parallelApps;\r\n    }\r\n    /**\r\n     * 移除apps\r\n     * @param app_list \r\n     */\r\n    removeApps(...app_list: App[]) {\r\n        app_list.forEach(app => { let indexOf = this.apps.findIndex(a => a.id == app.id); if (indexOf > -1) this.apps.splice(indexOf, 1); })\r\n    }\r\n\r\n    setMasterStatus(appStatus: AppLoadStatus) {\r\n        this.getMasterApp().loadStatus = appStatus;\r\n    }\r\n    setAppStatus(appId: string, loadStatus: AppLoadStatus) {\r\n        let app = this.apps.find(app => app.id == appId);\r\n        if (app) {\r\n            app.loadStatus = loadStatus;\r\n        }\r\n        debugger;\r\n        if (this.onAppChange) {\r\n            this.onAppChange(this.apps);\r\n        }\r\n\r\n    }\r\n    getAppStatus(appId: string) {\r\n        let app = this.apps.find(app => app.id == appId);\r\n\r\n        return app ? app.loadStatus : null;\r\n    }\r\n    getMasterApp() {\r\n        return this.apps.find(app => app.isMaster);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { CommandData, eventBus } from '../utils/index';\r\n\r\nif ((window as any)['id'] == 'child') {\r\n    let resultEl = document.getElementById('result') as HTMLInputElement;\r\n\r\n    eventBus.startEventListener();\r\n    let taskNumEl = document.getElementById('taskNum') as HTMLInputElement;\r\n    let statusEl = document.getElementById('status') as HTMLInputElement;\r\n\r\n\r\n    eventBus.onStarTask = (data: CommandData) => { taskNumEl.value = eventBus.processTasks.length + ''; statusEl.innerText = eventBus.status }\r\n    eventBus.onFinishTask = (data: CommandData) => { taskNumEl.value = eventBus.processTasks.length + ''; statusEl.innerText = eventBus.status }\r\n    (window as any)['child'] = {\r\n        sendMessage: () => eventBus.callMessage({ command: 'test', type: 'message' }),\r\n        callTask: () => eventBus.callTask({ command: 'test', type: 'task' }, (data) => { debugger; resultEl.innerText = data.date; })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { CalendarEvent, CommandData, eventBus } from '../utils/index';\r\n// import { AppSchell } from '../shell/index';\r\n\r\nif ((window as any)['id'] == 'parent') {\r\n    let statusEl = document.getElementById('status');\r\n    let calenderEl = document.getElementById('calender') as HTMLInputElement;\r\n\r\n    eventBus.startEventListener();\r\n    eventBus.onStarTask = (cmd: CommandData) => { statusEl.innerText = eventBus.status; alert('开始任务' + cmd.command) };\r\n\r\n    // eventBus.startCallback();\r\n    let eventListen = new CalendarEvent((_: any) => { calenderEl.value = ''; calenderEl.placeholder = '显示日期' });\r\n    // eventBus.registerListener('test', (_: any) => alert('command'));\r\n    (window as any)['p'] = {\r\n        backData: () => eventListen.emit(new Date(calenderEl.value)),\r\n        removeListener: () => eventListen.data,\r\n        displayEventData: () => alert(JSON.stringify(eventListen.data))\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { AppLoadStatus, LoadMethod } from '../../shell';\r\nimport { AppSchell } from '../../shell/app-shell';\r\nimport { CalendarEvent, eventBus, SettingEvent } from '../../utils';\r\n\r\nif (window.name == 'shell-parent') {\r\n    let status = document.getElementById('status');\r\n    let child1_status = document.getElementById('child1_status');\r\n    let app_num = document.getElementById('app_num');\r\n    let app_finish_num = document.getElementById('app_finish_num');\r\n    eventBus.startEventListener();\r\n    new SettingEvent((data: any) => alert(`setting`))\r\n\r\n\r\n    let child1 = 'child1';\r\n    let master = 'master';\r\n    let child2 = 'child2';\r\n\r\n    let appShell = new AppSchell();\r\n    appShell.addApps([\r\n        { id: 'master', url: 'http://localhost:3000/test/shell/parent.html', loadMethod: LoadMethod.Parallel, isMaster: true },\r\n        { id: 'child1', url: 'http://localhost:3000/test/shell/child1.html', loadMethod: LoadMethod.Preload },\r\n        { id: 'child2', url: 'http://localhost:3000/test/shell/child2.html', loadMethod: LoadMethod.LazyLoad },\r\n\r\n    ]);\r\n\r\n    appShell.onAppChange = (apps) => {\r\n        debugger;\r\n        child1_status.innerText = appShell.getAppStatus(child1);\r\n        app_num.innerText = appShell.apps.length + ''\r\n        app_finish_num.innerText = appShell.apps.filter(app => app.loadStatus == AppLoadStatus.Finished).length + ''\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    appShell.setMasterStatus(AppLoadStatus.Finished);\r\n    status.innerText = AppLoadStatus.Finished;\r\n\r\n    (window as any)['parent'] = {\r\n        onChildLoad: (appId) => { appShell.setAppStatus(appId, AppLoadStatus.Finished) },\r\n        addChild2: () => {\r\n            let iframe = document.createElement('iframe');\r\n            iframe.src = \"http://localhost:3000/test/shell/child2.html\";\r\n            iframe.onload = () => { alert(`child2 load`); appShell.setAppStatus(child2, AppLoadStatus.Finished) };\r\n            document.body.append(iframe);\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport let a = {\r\n    name: 'shell-parent'\r\n}","import { eventBus } from '../../utils/index';\r\nif (window.name == 'shell-child1') {\r\n    // alert('child1')\r\n    eventBus.startEventListener();\r\n    setTimeout(() => {\r\n        eventBus.callMessage({ command: 'send-setting', type: 'message' })\r\n\r\n    }, 1000);\r\n}   "],"names":["hello","master","SubAppLayout","EventListener","EventBusStatus","eventBus","EventBus","constructor","free","Map","callTask","event","callback","startTask","taskId","type","Date","now","callbacks","get","push","set","window","parent","postMessage","callMessage","command","status","process","processTasks","onStarTask","finishTask","task","find","t","taskIndex","findIndex","splice","onFinishTask","length","startEventListener","started","addEventListener","msg","data","listenerId","listeners","forEach","c","handle","alert","registerListener","eventType","listener","CalendarEvent","emit","date","frames","startListen","SettingEvent","AppLoadStatus","LoadMethod","ShellStatus","AppSchell","addApps","app_list","apps","loadParallel","parallelApps","filter","app","loadMethod","Parallel","getPreloadApps","Preload","getInertLoadApps","InertLoad","getLazyLoadApps","LazyLoad","removeApps","indexOf","a","id","setMasterStatus","appStatus","getMasterApp","loadStatus","setAppStatus","appId","onAppChange","getAppStatus","isMaster","resultEl","document","getElementById","taskNumEl","statusEl","value","innerText","sendMessage","calenderEl","cmd","eventListen","_","placeholder","backData","removeListener","displayEventData","JSON","stringify","name","child1_status","app_num","app_finish_num","child1","child2","appShell","url","Finished","onChildLoad","addChild2","iframe","createElement","src","onload","body","append","setTimeout"],"mappings":"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"}