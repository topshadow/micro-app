{"version":3,"file":"plugin.cjs.development.js","sources":["../src/service-invoke/master.ts","../src/utils/index.ts","../src/shell/app.ts","../src/shell/app-shell.ts","../src/test/child.ts","../src/test/parent.ts","../src/test/shell/parent.ts","../src/test/shell/child1.ts"],"sourcesContent":["/**\r\n * hello 函数\r\n */\r\nexport function hello() {\r\n\r\n}\r\n/**\r\n * 主服务\r\n */\r\nexport let master = {\r\n    hello\r\n}\r\n\r\n","export interface Task {\r\n\r\n}\r\n\r\nexport enum SubAppLayout {\r\n    fullscreen = 'fullscreen',\r\n    embed = 'embed'\r\n}\r\n\r\nexport interface CommandData {\r\n    taskId?: string;\r\n    type: 'task' | 'message';\r\n    command: 'calender' | 'change-layout' | 'test' | 'send-setting';\r\n    data?: { layout: SubAppLayout }\r\n    /**是否广播 */\r\n    broadcast?: boolean;\r\n\r\n\r\n\r\n}\r\n\r\nexport abstract class EventListener {\r\n    listenerId!: string;\r\n    data: any;\r\n    abstract emit(data: any): void\r\n    abstract handle: Function;\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**消息中心状态 */\r\nexport enum EventBusStatus {\r\n    /**空闲 */\r\n    free = \"free\",\r\n    /** 处理中 */\r\n    process = \"process\"\r\n}\r\nexport let eventBus = new class EventBus {\r\n    status: EventBusStatus = EventBusStatus.free;\r\n    onStarTask?: (data: CommandData) => void\r\n    onFinishTask?: (data: CommandData) => void\r\n\r\n    processTasks: CommandData[] = [];\r\n    started!: boolean;\r\n    listeners: Map<string, EventListener[]> = new Map<string, EventListener[]>();\r\n    callbacks: Map<string, Function[]> = new Map<string, Function[]>();\r\n    constructor() {\r\n\r\n    }\r\n\r\n    callTask(event: CommandData, callback: Function) {\r\n        this.startTask(event);\r\n        event.taskId = event.type + Date.now();\r\n\r\n        let callbacks = this.callbacks.get(event.taskId);\r\n        if (callbacks) {\r\n            callbacks.push(callback);\r\n        } else {\r\n            this.callbacks.set(event.taskId, [callback]);\r\n        }\r\n        debugger;\r\n        window.parent.postMessage(event, '*');\r\n    }\r\n    callMessage(event: CommandData) {\r\n        window.parent.postMessage(event, '*');\r\n    }\r\n    startTask(command: CommandData) {\r\n        this.status = EventBusStatus.process;\r\n\r\n        this.processTasks.push(command);\r\n        if (this.onStarTask) {\r\n            this.onStarTask(command)\r\n        }\r\n\r\n    }\r\n\r\n    finishTask(taskId: string) {\r\n        let task = this.processTasks.find(t => t.taskId == taskId);\r\n\r\n        let taskIndex = this.processTasks.findIndex(t => t.taskId == taskId);\r\n        if (taskIndex > -1) this.processTasks.splice(taskIndex, 1);\r\n        if (this.onFinishTask) {\r\n            this.onFinishTask(task)\r\n        }\r\n        debugger;\r\n        if (this.processTasks.length == 0) {\r\n            this.status = EventBusStatus.free;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    startEventListener() {\r\n        if (this.started) return;\r\n        this.started = true;\r\n\r\n        window.addEventListener('message', (msg) => {\r\n            let taskId = msg.data.taskId;\r\n            let listenerId = msg.data.listenerId;\r\n            debugger;\r\n\r\n            /**处理任务 */\r\n            if (msg.data.command) {\r\n                let callbacks = this.listeners.get(msg.data.command);\r\n                if (callbacks) {\r\n                    debugger;\r\n                    callbacks.forEach(c => c.handle(msg.data));\r\n                    this.finishTask(taskId);\r\n                }\r\n                return\r\n\r\n            } else {\r\n                let callbacks = this.callbacks.get(taskId);\r\n                if (callbacks) {\r\n                    callbacks.forEach(c => c(msg.data));\r\n                }\r\n                this.finishTask(taskId)\r\n\r\n            }\r\n\r\n\r\n            if (listenerId) {\r\n                alert(listenerId)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    // startCallback() {\r\n    //     window.addEventListener('message', (msg) => {\r\n    //         debugger;\r\n    //         let type = msg.data.command\r\n    //         let callbacks = this.callbacks.get(type);\r\n    //         if (callbacks) {\r\n    //             callbacks.forEach(c => c(msg.data))\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n\r\n    registerListener(eventType: string, listener: EventListener) {\r\n        let listeners = this.listeners.get(eventType);\r\n        if (listeners) {\r\n            listeners.push(listener);\r\n        } else {\r\n            this.listeners.set(eventType, [listener])\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class CalendarEvent extends EventListener {\r\n    listenerId: string = 'calendar' + Date.now();\r\n    data: any;\r\n    /**事件堆栈 */\r\n    eventStack: any[] = [];\r\n    emit(date: Date) {\r\n        // alert(JSON.stringify(this.data));\r\n        debugger;\r\n\r\n        window.frames[0].postMessage({ date, taskId: this.data.taskId }, '*');\r\n    }\r\n    handle: Function;\r\n    constructor(handle: Function) {\r\n        super();\r\n        this.handle = (data: CommandData) => { this.data = data; handle(data) };\r\n        if (!eventBus.started) {\r\n            eventBus.startEventListener();\r\n        }\r\n        debugger;\r\n        eventBus.registerListener('test', this);\r\n\r\n    }\r\n\r\n    startListen() {\r\n\r\n    }\r\n    // removeListener() {\r\n    //     let values = eventBus.callbacks\r\n    //     for (let key in values) {\r\n    //         let callbacks = eventBus.callbacks.get(key);\r\n    //         if (callbacks) {\r\n    //             let exsitListener = callbacks.find(c => c.listenerId == this.listenerId);\r\n    //             if (exsitListener) {\r\n    //                 let indexOf = callbacks.indexOf(exsitListener);\r\n    //                 if (indexOf > -1) { callbacks.splice(indexOf, 1) };\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n\r\n    // }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport class SettingEvent extends EventListener {\r\n    listenerId: string = 'calendar' + Date.now();\r\n    data: any;\r\n    /**事件堆栈 */\r\n    eventStack: any[] = [];\r\n    emit(date: Date) {\r\n        // alert(JSON.stringify(this.data));\r\n        debugger;\r\n\r\n        window.frames[0].postMessage({ date, taskId: this.data.taskId }, '*');\r\n    }\r\n    handle: Function;\r\n    constructor(handle: Function) {\r\n        super();\r\n        this.handle = (data: CommandData) => { this.data = data; handle(data) };\r\n        if (!eventBus.started) {\r\n            eventBus.startEventListener();\r\n        }\r\n        debugger;\r\n        eventBus.registerListener('send-setting', this);\r\n\r\n    }\r\n\r\n    startListen() {\r\n\r\n    }\r\n    // removeListener() {\r\n    //     let values = eventBus.callbacks\r\n    //     for (let key in values) {\r\n    //         let callbacks = eventBus.callbacks.get(key);\r\n    //         if (callbacks) {\r\n    //             let exsitListener = callbacks.find(c => c.listenerId == this.listenerId);\r\n    //             if (exsitListener) {\r\n    //                 let indexOf = callbacks.indexOf(exsitListener);\r\n    //                 if (indexOf > -1) { callbacks.splice(indexOf, 1) };\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n\r\n    // }\r\n\r\n\r\n\r\n}\r\n\r\n","export enum AppLoadStatus {\r\n    Loading = 'Loading',\r\n    Finished = 'Finished',\r\n    Waiting = 'Waiting'\r\n}\r\nexport interface App {\r\n    /**应用的唯一id */\r\n    id: string;\r\n    title?: string;\r\n    /** 地址 */\r\n\r\n    url: string;\r\n    icon?: string;\r\n    description?: string;\r\n    /**应用的加载方式*/\r\n    loadMethod: LoadMethod;\r\n    isMaster?: boolean;\r\n    loadStatus?: AppLoadStatus\r\n\r\n\r\n}\r\nexport enum LoadMethod {\r\n    /**并行加载,加载优先级最高,使用预渲染与主应用同时加载,不易同时过多应用采用进行并行加载,虽然没有网络并发数量限制,但是流量压力过大 */\r\n    Parallel = 'Parallel',\r\n    /** 预加载  采用预加载  在主应用加载完成后，才会进行加载内容 */\r\n    Preload = 'Preload',\r\n    /** 懒加载  除非主动激活,或是调用其服务/命令  才会进行加载 */\r\n    LazyLoad = 'LazyLoad',\r\n    /** 惰性加载 当应用加载的方式为惰性加载时,通常处于禁用状态 */\r\n    InertLoad = 'InertLoad'\r\n}","import { App, AppLoadStatus, LoadMethod } from \"./app\";\r\n\r\nexport enum ShellStatus {\r\n    LoadingApp = 'LoadingApp',\r\n    FinishLoading = 'FinishLoading'\r\n}\r\n\r\n/**\r\n *  应用管理 ,请在主应用中使用\r\n * \r\n * let appShell= new AppSchell();\r\n * 在ssr 中可以使用\r\n * appShell.addApps();\r\n * \r\n * \r\n*/\r\nexport class AppSchell {\r\n    status!: ShellStatus;\r\n    loading: boolean;\r\n    loadingApp: App\r\n    apps: App[] = [];\r\n    masterApp!: App;\r\n    onAppChange?: (apps: App[]) => void;\r\n\r\n    addApps(app_list: App[]) {\r\n        this.apps.push(...app_list);\r\n    }\r\n    /** 获取并行加载app */\r\n    loadParallel() {\r\n        let parallelApps = this.apps.filter(app => app.loadMethod == LoadMethod.Parallel);\r\n        return parallelApps;\r\n    }\r\n    /**\r\n     * 获取预加载app\r\n     */\r\n    getPreloadApps() {\r\n        let parallelApps = this.apps.filter(app => app.loadMethod == LoadMethod.Preload);\r\n        return parallelApps;\r\n    }\r\n\r\n    /**\r\n     * 获取惰性加载app\r\n     * @returns \r\n     */\r\n    getInertLoadApps() {\r\n        let parallelApps = this.apps.filter(app => app.loadMethod == LoadMethod.InertLoad);\r\n        return parallelApps;\r\n    }\r\n    /**获取懒加载apps */\r\n    getLazyLoadApps() {\r\n        let parallelApps = this.apps.filter(app => app.loadMethod == LoadMethod.LazyLoad);\r\n        return parallelApps;\r\n    }\r\n    /**\r\n     * 移除apps\r\n     * @param app_list \r\n     */\r\n    removeApps(...app_list: App[]) {\r\n        app_list.forEach(app => { let indexOf = this.apps.findIndex(a => a.id == app.id); if (indexOf > -1) this.apps.splice(indexOf, 1); })\r\n    }\r\n\r\n    setMasterStatus(appStatus: AppLoadStatus) {\r\n        this.getMasterApp().loadStatus = appStatus;\r\n    }\r\n    setAppStatus(appId: string, loadStatus: AppLoadStatus) {\r\n        let app = this.apps.find(app => app.id == appId);\r\n        if (app) {\r\n            app.loadStatus = loadStatus;\r\n        }\r\n        debugger;\r\n        if (this.onAppChange) {\r\n            this.onAppChange(this.apps);\r\n        }\r\n\r\n    }\r\n    getAppStatus(appId: string) {\r\n        let app = this.apps.find(app => app.id == appId);\r\n\r\n        return app ? app.loadStatus : null;\r\n    }\r\n    getMasterApp() {\r\n        return this.apps.find(app => app.isMaster);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { CommandData, eventBus } from '../utils/index';\r\n\r\nif ((window as any)['id'] == 'child') {\r\n    let resultEl = document.getElementById('result') as HTMLInputElement;\r\n\r\n    eventBus.startEventListener();\r\n    let taskNumEl = document.getElementById('taskNum') as HTMLInputElement;\r\n    let statusEl = document.getElementById('status') as HTMLInputElement;\r\n\r\n\r\n    eventBus.onStarTask = (data: CommandData) => { taskNumEl.value = eventBus.processTasks.length + ''; statusEl.innerText = eventBus.status }\r\n    eventBus.onFinishTask = (data: CommandData) => { taskNumEl.value = eventBus.processTasks.length + ''; statusEl.innerText = eventBus.status }\r\n    (window as any)['child'] = {\r\n        sendMessage: () => eventBus.callMessage({ command: 'test', type: 'message' }),\r\n        callTask: () => eventBus.callTask({ command: 'test', type: 'task' }, (data) => { debugger; resultEl.innerText = data.date; })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { CalendarEvent, CommandData, eventBus } from '../utils/index';\r\n// import { AppSchell } from '../shell/index';\r\n\r\nif ((window as any)['id'] == 'parent') {\r\n    let statusEl = document.getElementById('status');\r\n    let calenderEl = document.getElementById('calender') as HTMLInputElement;\r\n\r\n    eventBus.startEventListener();\r\n    eventBus.onStarTask = (cmd: CommandData) => { statusEl.innerText = eventBus.status; alert('开始任务' + cmd.command) };\r\n\r\n    // eventBus.startCallback();\r\n    let eventListen = new CalendarEvent((_: any) => { calenderEl.value = ''; calenderEl.placeholder = '显示日期' });\r\n    // eventBus.registerListener('test', (_: any) => alert('command'));\r\n    (window as any)['p'] = {\r\n        backData: () => eventListen.emit(new Date(calenderEl.value)),\r\n        removeListener: () => eventListen.data,\r\n        displayEventData: () => alert(JSON.stringify(eventListen.data))\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { AppLoadStatus, LoadMethod } from '../../shell';\r\nimport { AppSchell } from '../../shell/app-shell';\r\nimport { CalendarEvent, eventBus, SettingEvent } from '../../utils';\r\n\r\nif (window.name == 'shell-parent') {\r\n    let status = document.getElementById('status');\r\n    let child1_status = document.getElementById('child1_status');\r\n    let app_num = document.getElementById('app_num');\r\n    let app_finish_num = document.getElementById('app_finish_num');\r\n    eventBus.startEventListener();\r\n    new SettingEvent((data: any) => alert(`setting`))\r\n\r\n\r\n    let child1 = 'child1';\r\n    let master = 'master';\r\n    let child2 = 'child2';\r\n\r\n    let appShell = new AppSchell();\r\n    appShell.addApps([\r\n        { id: 'master', url: 'http://localhost:3000/test/shell/parent.html', loadMethod: LoadMethod.Parallel, isMaster: true },\r\n        { id: 'child1', url: 'http://localhost:3000/test/shell/child1.html', loadMethod: LoadMethod.Preload },\r\n        { id: 'child2', url: 'http://localhost:3000/test/shell/child2.html', loadMethod: LoadMethod.LazyLoad },\r\n\r\n    ]);\r\n\r\n    appShell.onAppChange = (apps) => {\r\n        debugger;\r\n        child1_status.innerText = appShell.getAppStatus(child1);\r\n        app_num.innerText = appShell.apps.length + ''\r\n        app_finish_num.innerText = appShell.apps.filter(app => app.loadStatus == AppLoadStatus.Finished).length + ''\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    appShell.setMasterStatus(AppLoadStatus.Finished);\r\n    status.innerText = AppLoadStatus.Finished;\r\n\r\n    (window as any)['parent'] = {\r\n        onChildLoad: (appId) => { appShell.setAppStatus(appId, AppLoadStatus.Finished) },\r\n        addChild2: () => {\r\n            let iframe = document.createElement('iframe');\r\n            iframe.src = \"http://localhost:3000/test/shell/child2.html\";\r\n            iframe.onload = () => { alert(`child2 load`); appShell.setAppStatus(child2, AppLoadStatus.Finished) };\r\n            document.body.append(iframe);\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport let a = {\r\n    name: 'shell-parent'\r\n}","import { eventBus } from '../../utils/index';\r\nif (window.name == 'shell-child1') {\r\n    // alert('child1')\r\n    eventBus.startEventListener();\r\n    setTimeout(() => {\r\n        eventBus.callMessage({ command: 'send-setting', type: 'message' })\r\n\r\n    }, 1000);\r\n}   "],"names":["hello","master","SubAppLayout","EventListener","EventBusStatus","eventBus","EventBus","free","Map","_proto","prototype","callTask","event","callback","startTask","taskId","type","Date","now","callbacks","get","push","set","window","parent","postMessage","callMessage","command","status","process","processTasks","onStarTask","finishTask","task","find","t","taskIndex","findIndex","splice","onFinishTask","length","startEventListener","started","addEventListener","msg","data","listenerId","_this","listeners","forEach","c","handle","alert","registerListener","eventType","listener","CalendarEvent","_EventListener","_inheritsLoose","_this2","call","_assertThisInitialized","_proto2","emit","date","frames","startListen","SettingEvent","_EventListener2","_this3","_proto3","AppLoadStatus","LoadMethod","ShellStatus","AppSchell","addApps","app_list","_this$apps","apps","apply","loadParallel","parallelApps","filter","app","loadMethod","Parallel","getPreloadApps","Preload","getInertLoadApps","InertLoad","getLazyLoadApps","LazyLoad","removeApps","Array","_len","_key","arguments","indexOf","a","id","setMasterStatus","appStatus","getMasterApp","loadStatus","setAppStatus","appId","onAppChange","getAppStatus","isMaster","resultEl","document","getElementById","taskNumEl","statusEl","value","innerText","sendMessage","calenderEl","cmd","eventListen","_","placeholder","backData","removeListener","displayEventData","JSON","stringify","name","child1_status","app_num","app_finish_num","child1","child2","appShell","url","Finished","onChildLoad","addChild2","iframe","createElement","src","onload","body","append","setTimeout"],"mappings":"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"}